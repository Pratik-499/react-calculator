{"version":3,"sources":["components/Calc.js","components/App.js","reportWebVitals.js","index.js"],"names":["Calc","useToasts","addToast","inputControls","key","value","displayValue","actionControls","useState","inputVal","setInputVal","currentInput","setCurrentInput","handleInputClickEvent","e","preventDefault","toLowerCase","eraseValue","calcPercentage","calcPlusMinus","setInputValue","calcResult","inputValue","toString","slice","validateInputStr","inputStr","lastChar","length","includes","isActionTrigger","console","log","indexOf","result","eval","Math","abs","err","error","appearance","autoDismiss","handleKeyboardEvent","event","code","keyCode","document","body","classList","toggle","useEffect","addEventListener","removeEventListener","inputControlsElem","map","el","index","onClick","actionControlsElem","className","type","name","readOnly","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39ac443e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useToasts } from \"react-toast-notifications\";\n\nconst Calc = () => {\n  const { addToast } = useToasts();\n  const inputControls = [\n    { key: \"key-ac\", value: \"AC\", displayValue: \"AC\" },\n    { key: \"key-plus-minus\", value: \"+/-\", displayValue: \"±\" },\n    { key: \"key-percent\", value: \"%\", displayValue: \"%\" },\n    { key: \"key-7\", value: \"7\", displayValue: \"7\" },\n    { key: \"key-8\", value: \"8\", displayValue: \"8\" },\n    { key: \"key-9\", value: \"9\", displayValue: \"9\" },\n    { key: \"key-4\", value: \"4\", displayValue: \"4\" },\n    { key: \"key-5\", value: \"5\", displayValue: \"5\" },\n    { key: \"key-6\", value: \"6\", displayValue: \"6\" },\n    { key: \"key-1\", value: \"1\", displayValue: \"1\" },\n    { key: \"key-2\", value: \"2\", displayValue: \"2\" },\n    { key: \"key-3\", value: \"3\", displayValue: \"3\" },\n    { key: \"key-0\", value: \"0\", displayValue: \"0\" },\n    { key: \"key-dot\", value: \".\", displayValue: \".\" },\n    { key: \"key-erase\", value: \"erase\", displayValue: \"\\u232b\" },\n  ];\n  const actionControls = [\n    { key: \"divide\", value: \"/\", displayValue: \"÷\" },\n    { key: \"multiply\", value: \"*\", displayValue: \"×\" },\n    { key: \"minus\", value: \"-\", displayValue: \"-\" },\n    { key: \"plus\", value: \"+\", displayValue: \"+\" },\n    { key: \"equal\", value: \"=\", displayValue: \"=\" },\n  ];\n\n  const [inputVal, setInputVal] = useState(0);\n  const [currentInput, setCurrentInput] = useState(0);\n\n  const handleInputClickEvent = (e, value) => {\n    e.preventDefault();\n    const valueDownCase = value.toLowerCase();\n\n    switch (valueDownCase) {\n      case \"erase\":\n        eraseValue();\n        break;\n      case \"ac\":\n        setInputVal(0);\n        break;\n      case \"%\":\n        calcPercentage();\n        break;\n      case \"+/-\":\n        calcPlusMinus();\n        break;\n      case \"/\":\n      case \"*\":\n      case \"-\":\n      case \"+\":\n        setInputValue(value, 1);\n        break;\n      case \"=\":\n        calcResult();\n        break;\n      default:\n        setInputValue(value, 0);\n    }\n  };\n\n  const eraseValue = () => {\n    let inputValue = inputVal.toString();\n    if (inputValue && inputValue !== \"\") {\n      inputValue = inputValue.slice(0, -1);\n      setInputVal(inputValue);\n    }\n  };\n\n  const validateInputStr = (inputStr) => {\n    let inputValue = inputStr.toString();\n    let lastChar = inputValue.slice(inputValue.length - 1);\n\n    if (\"+-*/\".includes(lastChar) && \"+-*/\".includes(currentInput)) {\n      inputValue = inputValue.slice(0, -1);\n    }\n    return inputValue;\n  };\n\n  const setInputValue = (value, isActionTrigger) => {\n    console.log(value);\n    if (value) {\n      let inputValue = inputVal.toString();\n      if (inputValue.slice(0, 1) === \"0\") {\n        inputValue = inputValue.slice(1);\n        if (inputValue === \"\") {\n          inputValue = value;\n          value = \"\";\n        }\n      }\n      if (isActionTrigger) {\n        inputValue = validateInputStr(inputValue);\n        if (inputValue === \"0\") {\n          return false;\n        }\n      }\n      if (inputValue !== \"\") {\n        inputValue += value;\n        console.log(inputValue);\n        if (inputValue === \".\" || inputValue < 1) {\n          inputValue = \"0\" + inputValue;\n        }\n        if (inputValue.indexOf(\"..\") > -1) {\n          inputValue = inputValue.slice(0, -1);\n        }\n        setCurrentInput(value);\n        setInputVal(inputValue);\n      }\n    }\n  };\n\n  const calcPercentage = () => {\n    let inputValue = inputVal;\n    inputValue = validateInputStr(inputValue);\n    const result = inputValue / 100;\n    setInputVal(result);\n  };\n\n  const calcPlusMinus = () => {\n    let inputValue = inputVal;\n    inputValue = validateInputStr(inputValue);\n    try {\n      let result = eval(inputValue);\n      if (result) {\n        if (result < 0) {\n          result = Math.abs(result);\n        } else {\n          result = result * -1;\n        }\n        setInputVal(`${result}`);\n      }\n    } catch (err) {\n      console.error(err);\n      addToast(\"Invalid input. Please check the input value.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n      });\n    }\n  };\n\n  const calcResult = () => {\n    if (inputVal && inputVal !== \"\") {\n      const inputValue = validateInputStr(inputVal);\n      try {\n        const result = eval(inputValue);\n        if (result) {\n          setInputVal(`${result}`);\n        }\n      } catch (err) {\n        console.error(err);\n        addToast(\"Invalid input. Please check the input value.\", {\n          appearance: \"error\",\n          autoDismiss: true,\n        });\n      }\n    }\n  };\n\n  const handleKeyboardEvent = (event) => {\n    const {code, key, keyCode} = event;\n\n    if (key === \"d\" || key === \"D\") {\n      document.body.classList.toggle(\"mode-dark\");\n    }\n    if (code.includes(\"Digit\") || code.includes(\"Numpad\")) {\n      if (\n        (keyCode >= 48 && keyCode <= 57) ||\n        (keyCode >= 96 && keyCode <= 105)\n      ) {\n        setInputValue(key.toString());\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyboardEvent);\n    return () => {\n        document.removeEventListener(\"keydown\", handleKeyboardEvent);\n    };\n  }, []);\n\n  const inputControlsElem = inputControls.map((el, index) => (\n    <li key={el.key} onClick={(e) => handleInputClickEvent(e, el.value)}>\n      {el.displayValue}\n    </li>\n  ));\n  const actionControlsElem = actionControls.map((el, index) => (\n    <li key={el.key} onClick={(e) => handleInputClickEvent(e, el.value)}>\n      {el.displayValue}\n    </li>\n  ));\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"app--title\">React Calculator</h1>\n      <div className=\"app-wrapper\">\n        <input\n          type=\"text\"\n          className=\"app-wrapper--input\"\n          name=\"calcinput\"\n          value={inputVal}\n          readOnly\n        />\n        <div className=\"app-wrapper-input-action-btn\">\n          <ul className=\"calc-btn-list\">{inputControlsElem}</ul>\n          <ul className=\"calc-btn-list\">{actionControlsElem}</ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calc;\n","import React from \"react\";\nimport { ToastProvider } from 'react-toast-notifications'\nimport Calc from \"./Calc\";\n\nconst App = () => {\n  return (\n    <ToastProvider>\n      <Calc />\n    </ToastProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}